- @page_title = t '.page_title', :vehicle_title => @vehicle.title

= javascript_include_tag "external/highcharts"
= javascript_tag "movementRanges = #{@movements_ranges.to_json}"
= javascript_tag "jsLocaleKeys = #{Hash[*@js_locale_keys.collect{ |key| [key, t('.' + key)] }.flatten].to_json}"

- content_for :sidebar_actions do
  %li= link_to t('.action.map'), map_admin_vehicle_path(:date => @selected_date)
  %li= link_to t('.action.reports'), reports_admin_vehicle_path
  %li= link_to t('.action.details'), admin_vehicle_path

- content_for :sidebar do
  %h4= t '.date_picker'
  %ul
    %li= link_to @selected_date, '#', :id => 'selectedDate', 'data-datepicker' => 'datepicker'

- if @movements.blank? and @fuel_changes.blank?
  = t('.no_data')
- else

  - if @report
    %h3= t '.header.stats'
  %table.table.table-bordered.table-striped
    %tr
      %th{ :width => '35%' }= t '.stats.date'
      %td{ :width => '15%' }= @selected_date
      %th{ :width => '35%' }= t '.stats.week_day'
      %td{ :width => '15%' }= @week_day
    - if @report
      %tr
        %th= t '.stats.movements'
        %td= @report.movement_count
        %th= t '.stats.movements_duration'
        %td= duration_human(@report.movement_time)
      %tr
        %th= t '.stats.parking'
        %td= @report.parking_count
        %th= t '.stats.parking_duration'
        %td= duration_human(@report.parking_time)
      - if @report.movement_count > 0
        %tr
          %th= t '.stats.first_movement_start'
          %td= @first_movement.from_time.to_formatted_s(:date_time)
          %th= t '.stats.last_movement_end'
          %td= @last_movement.to_time.to_formatted_s(:date_time)
        - if @vehicle.fuel_sensor
          %tr
            %th= t '.stats.fuel_on_start'
            %td= decimal_human(@vehicle.fuel_by_time(@first_movement.from_timestamp))
            %th= t '.stats.fuel_on_end'
            %td= decimal_human(@vehicle.fuel_by_time(@last_movement.to_timestamp))
      %tr
        %th= t '.stats.distance'
        %td= decimal_human(@report.distance.to_f / 1000)
        %th= t '.stats.fuel'
        %td= decimal_human(@report.fuel_norm.to_f / 1000)
      - if @vehicle.fuel_sensor
        %tr
          %th= t '.stats.refuels'
          %td= decimal_human(@report.fuel_added.to_f) + ' / ' + decimal_human(@report.fuel_stolen.to_f)
          %th= t '.stats.fuel_used'
          %td= decimal_human(@report.fuel_used)

  %h3= t '.header.chart'
  #movementsChart{ :style => 'width: 100%; height: 100px;' }

  %h3= t '.header.movements_list'
  %table.table.table-bordered.table-striped
    %thead
      %tr
      - %w{ type from_time to_time duration distance }.each do |column_name|
        %th= t ".column.#{column_name}"
      - if @vehicle.fuel_sensor
        %th= t '.column.fuel_used'

    %tbody
      - @movements.each do |movement|
        %tr
          %td
            = image_tag "icons/#{movement.parking ? 'parking' : 'arrow_down'}.png", :class => 'inline-icon'
            = t('.' + (movement.parking ? 'parking_title' : 'movement_title'))
          %td= movement.from_time.to_formatted_s(:date_time)
          %td= movement.to_time.to_formatted_s(:date_time)
          %td= duration_human(movement.elapsed_time)
          %td= decimal_human(movement.distance_km)
          - if @vehicle.fuel_sensor
            %td= decimal_human(movement.fuel_used)

  - if @vehicle.fuel_sensor
    %h3= t '.header.fuel_changes_list'

    - if @fuel_changes.blank?
      = t('.no_data')
    - else
      %table.table.table-bordered.table-striped
        %thead
          %tr
          - %w{ type from_time to_time duration amount }.each do |column_name|
            %th= t ".column_fuel.#{column_name}"

        %tbody
          - @fuel_changes.each do |fuel_change|
            %tr
              %td
                = image_tag "icons/#{fuel_change.refuel? ? 'plus-circle' : 'minus-circle'}.png", :class => 'inline-icon'
                = t('.' + (fuel_change.refuel? ? 'refuel_title' : 'fuel_theft_title'))
              %td= fuel_change.from_time.to_formatted_s(:date_time)
              %td= fuel_change.to_time.to_formatted_s(:date_time)
              %td= duration_human(fuel_change.elapsed_time)
              %td= decimal_human(fuel_change.amount)